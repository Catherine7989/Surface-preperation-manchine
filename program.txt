#include <LiquidCrystal.h>
LiquidCrystal lcd(12, 11, 5, 4, 3, 2); //define pins for LCD display
#include "Timer.h"  
int dirpinR1 = 23;  //define pins for motor R1
int steppinR1 = 22;
int enablePinR1 = 27;
int dirpinR2 = 31;  //define pins for motor R2
int steppinR2 = 30;
int enablePinR2 = 35;
int dirpinX = 39;  //define pins for motor X
int steppinX = 38;
int enablePinX= 43;
int MS1X = 40;  
int MS2X = 41;
int MS3X = 42;
int dirpinY = 47;  //define pins for motor Y
int steppinY = 46;
int enablePinY= 51;
int MS1Y = 48;
int MS2Y = 49;
int MS3Y = 50;
int InterV=400;   //define pulse delay,unit:ms
int tickEvent; 
int button4 = 6;  //define stop(red) button
int button5 = 7;  //define go(green) button
int button8 = 8;  //define axis select button
int button = 28;  //define speed up button
int button1 = 29; //define speed down button
int button2 = 45; //define right side limit switch for motor X
int button3 = 44; //define left side limit switch for motor X
int button6 = 53; //define right side limit switch for motor Y
int button7 = 52; //define right side limit switch for motor Y
int LcdState = 0;
int LcdState1 = 0;
int Speed = 1;   //define two vaious for detect current speed, initial  state is  1
int Speed2 = 1;
boolean DirectionX =false;  //define the direction of motor X,Y
boolean DirectionY =false;
boolean start = false;     
long st,st1,st2,st3,st4,st5,st6,st7;  //define time state match with the button
Timer t;
void setup()
{
tickEvent = t.every(1, doSomething);  //execute the order of doSomething function every second
lcd.begin(16, 2);        //define LCD display
// set control pins output for four stepper motors
pinMode(dirpinR1, OUTPUT);   
pinMode(steppinR1, OUTPUT);
pinMode(enablePinR1, OUTPUT);
pinMode(dirpinX, OUTPUT);
pinMode(steppinX, OUTPUT);
pinMode(enablePinX, OUTPUT);
pinMode(dirpinR2, OUTPUT);
pinMode(steppinR2, OUTPUT);
pinMode(enablePinR2, OUTPUT);
pinMode(dirpinY, OUTPUT);
pinMode(steppinY, OUTPUT);
pinMode(enablePinY, OUTPUT);
digitalWrite(enablePinR1,HIGH);   //Write initial value of power is LOW
digitalWrite(enablePinX,HIGH );
digitalWrite(enablePinR2,HIGH); 
digitalWrite(enablePinY,HIGH );
pinMode(MS1X, OUTPUT);
pinMode(MS2X, OUTPUT);
pinMode(MS3X, OUTPUT);
pinMode(MS1Y, OUTPUT);
pinMode(MS2Y, OUTPUT);
pinMode(MS3Y, OUTPUT);
//define initial motor speed is 1/16 step
digitalWrite(MS1X,HIGH);
digitalWrite(MS2X,HIGH);  
digitalWrite(MS3X,HIGH);
digitalWrite(MS1Y,HIGH);
digitalWrite(MS2Y,HIGH);
digitalWrite(MS3Y,HIGH);
}
void loop()
{
   startCheck();  //detct the state of start and stop button
   if(start){ //if read start button
    ctrlStepper(20);
//    Lcd();
   }else if(!start){//if read stop button,motors stop and LCD display CLS
     lcd.clear();
     LcdState=0;
   }
}

void ctrlStepper(int stp){  //define a function to control motors
     t.update();  //check the button parameter of doSomething function before motor running everytime
     
   digitalWrite(enablePinR1, LOW);
   digitalWrite(enablePinR2, LOW);
   digitalWrite(enablePinX, LOW);  //pull power high
   digitalWrite(enablePinY, LOW);
   digitalWrite(dirpinR1, false); 
   digitalWrite(dirpinR2, false); 
   digitalWrite(dirpinX, DirectionX);  //define direction of motor
   digitalWrite(dirpinY, DirectionY);
   digitalWrite(steppinR1, LOW); //motor stop
   digitalWrite(steppinR2, LOW);
   digitalWrite(steppinX, LOW);  
   digitalWrite(steppinY, LOW);  
   delayMicroseconds(InterV);   //pulse interval
   digitalWrite(steppinR1, HIGH);  //motor start 
   digitalWrite(steppinR2, HIGH);  
   digitalWrite(steppinX, HIGH);
   digitalWrite(steppinY, HIGH);
   delayMicroseconds(InterV);    //pulse interva
   digitalWrite(enablePinR1, LOW);  
   digitalWrite(enablePinX, LOW);  //pull power low
   digitalWrite(enablePinR2, LOW);
   digitalWrite(enablePinY, LOW);
  
}
void doSomething()  //define a function to check the state of button
{ 
  Lcd();   //LCD display different speed according to different button state
 if(digitalRead(button8)){   //if toggle switch is HIGH
  if(digitalRead(button) & Speed==1 & millis()-st>700){  //if read speed up button and speed state is 1 meanwhile will not repeat read within 0.7second 
    st=millis();
    digitalWrite(MS1X,HIGH); //write motor X speed 1/8 step
    digitalWrite(MS2X,HIGH);
    digitalWrite(MS3X,LOW);
    Speed=2;
  }
  if(digitalRead(button) & Speed==2 & millis()-st>700){  //if read speed up button and speed stater is 2
    st=millis();    
    digitalWrite(MS1X,LOW);  //write motor X speed 1/4 step
    digitalWrite(MS2X,HIGH);
    digitalWrite(MS3X,LOW);
    Speed=3;
  }
  if(digitalRead(button) & Speed==3 & millis()-st>700){  //if read speed up button and speed stater is 3
    st=millis();
    digitalWrite(MS1X,HIGH);//write motor X speed 1/2 step
    digitalWrite(MS2X,LOW);
    digitalWrite(MS3X,LOW);
    Speed=4;
  }
  if(digitalRead(button) & Speed==4 & millis()-st>700){//if read speed up button and speed stater is 4
    st=millis();
    digitalWrite(MS1X,LOW);//write motor X speed full step
    digitalWrite(MS2X,LOW);
    digitalWrite(MS3X,LOW);
    Speed=5;
  }
  
  if(digitalRead(button1) & Speed==5 & millis()-st1>700){ //if read speed down button and speed stater is 5
    st1=millis();
    digitalWrite(MS1X,HIGH); //write motor X speed 1/2 step
    digitalWrite(MS2X,LOW);
    digitalWrite(MS3X,LOW);
    Speed=4;
  }
  if(digitalRead(button1) & Speed==4 & millis()-st1>700){//if read speed down button and speed stater is 4
    st1=millis();
    digitalWrite(MS1X,LOW);//write motor X speed 1/4 step
    digitalWrite(MS2X,HIGH);
    digitalWrite(MS3X,LOW);
    Speed=3;
  }
  if(digitalRead(button1) & Speed==3 & millis()-st1>700){//if read speed down button and speed stater is 3
    st1=millis();
    digitalWrite(MS1X,HIGH);//write motor X speed 1/8 step
    digitalWrite(MS2X,HIGH);
    digitalWrite(MS3X,LOW);
    Speed=2;
  }
  if(digitalRead(button1) & Speed==2 & millis()-st1>700){//if read speed down button and speed stater is 2
    st1=millis();
    digitalWrite(MS1X,HIGH);//write motor X speed 1/16 step
    digitalWrite(MS2X,HIGH);
    digitalWrite(MS3X,HIGH);
    Speed=1;
  }
 }
 if(!digitalRead(button8)){  //if toggle switch is LOW
  if(digitalRead(button) & Speed2==1 & millis()-st>700){  //same with the motor X
    st=millis();
    digitalWrite(MS1Y,HIGH);
    digitalWrite(MS2Y,HIGH);
    digitalWrite(MS3Y,LOW);
    Speed2=2;
  }
  if(digitalRead(button) & Speed2==2 & millis()-st>700){
    st=millis();
    digitalWrite(MS1Y,LOW);
    digitalWrite(MS2Y,HIGH);
    digitalWrite(MS3Y,LOW);
    Speed2=3;
  }
  if(digitalRead(button) & Speed2==3 & millis()-st>700){
    st=millis();
    digitalWrite(MS1Y,HIGH);
    digitalWrite(MS2Y,LOW);
    digitalWrite(MS3Y,LOW);
    Speed2=4;
  }
  if(digitalRead(button) & Speed2==4 & millis()-st>700){
    st=millis();
    digitalWrite(MS1Y,LOW);
    digitalWrite(MS2Y,LOW);
    digitalWrite(MS3Y,LOW);
    Speed2=5;
  }
  
  if(digitalRead(button1) & Speed2==5 & millis()-st1>700){
    st1=millis();
    digitalWrite(MS1Y,HIGH);
    digitalWrite(MS2Y,LOW);
    digitalWrite(MS3Y,LOW);
    Speed2=4;
  }
  if(digitalRead(button1) & Speed2==4 & millis()-st1>700){
    st1=millis();
    digitalWrite(MS1Y,LOW);
    digitalWrite(MS2Y,HIGH);
    digitalWrite(MS3Y,LOW);
    Speed2=3;
  }
  if(digitalRead(button1) & Speed2==3 & millis()-st1>700){
    st1=millis();
    digitalWrite(MS1Y,HIGH);
    digitalWrite(MS2Y,HIGH);
    digitalWrite(MS3Y,LOW);
    Speed2=2;
  }
  if(digitalRead(button1) & Speed2==2 & millis()-st1>700){
    st1=millis();
    digitalWrite(MS1Y,HIGH);
    digitalWrite(MS2Y,HIGH);
    digitalWrite(MS3Y,HIGH);
    Speed2=1;
  }
 }
 if(digitalRead(button2) & millis()-st2>700){  //if read X right side limit switch,direction turns to  counter clockwise
   DirectionX=true;
   st2=millis();
 }
 if(digitalRead(button3) & millis()-st3>700){  //if read X left side limit switch,direction turns to clockwise
   DirectionX=false;
   st3=millis();
 }
 if(digitalRead(button6) & millis()-st6>700){ //if read Y right side limit switch,direction turns to counter clockwise
   DirectionY=true;
   st6=millis();
 }
 if(digitalRead(button7) & millis()-st7>700){//if read Y left side limit switch,direction turns to clockwise
   DirectionY=false;
   st7=millis();
 }
}

void startCheck(){  //define a function to detect start and stop button
 if(digitalRead(button4) & millis()-st4>700){   
   start=false;
   st4=millis();
 }
 if(digitalRead(button5) & millis()-st5>700){
   start=true;
   st5=millis();
 }
}
void Lcd(){  //define a function to display speed according to button control
  if(Speed==5 & LcdState!=1){
      lcd.clear();
      lcd.print(" Xaxis     Yaxis");
      lcd.setCursor(0,1);
      lcd.print("750/RPM   47/RPM");
      LcdState=1;
   }
   if(Speed==4 & LcdState!=2){
      lcd.clear();
      lcd.print(" Xaxis     Yaxis");
      lcd.setCursor(0,1);
      lcd.print("375/RPM    47/RPM");
      LcdState=2;
   }
   if(Speed==3 & LcdState!=3){
      lcd.clear();
      lcd.print(" Xaxis     Yaxis");
      lcd.setCursor(0,1);
      lcd.print("188/RPM    47/RPM");
      LcdState=3;
   }
   if(Speed==2 & LcdState!=4){
      lcd.clear();
      lcd.print(" Xaxis     Yaxis");
      lcd.setCursor(0,1);
      lcd.print("94/RPM    47/RPM");
      LcdState=4;
   }
   if(Speed==1 & LcdState!=5){
      lcd.clear();
      lcd.print(" Xaxis     Yaxis");
      lcd.setCursor(0,1);
      lcd.print("47/RPM    47/RPM");
      LcdState=5;
   }
     if(Speed2==5 & LcdState1!=1){
      lcd.clear();
      lcd.print(" Xaxis     Yaxis");
      lcd.setCursor(0,1);
      lcd.print("47/RPM   750/RPM");
      LcdState1=1;
   }
   if(Speed2==4 & LcdState1!=2){
      lcd.clear();
      lcd.print(" Xaxis     Yaxis");
      lcd.setCursor(0,1);
      lcd.print("47/RPM    375/RPM");
      LcdState1=2;
   }
   if(Speed2==3 & LcdState1!=3){
      lcd.clear();
      lcd.print(" Xaxis     Yaxis");
      lcd.setCursor(0,1);
      lcd.print("47/RPM    188/RPM");
      LcdState1=3;
   }
   if(Speed2==2 & LcdState1!=4){
      lcd.clear();
      lcd.print(" Xaxis     Yaxis");
      lcd.setCursor(0,1);
      lcd.print("47/RPM    94/RPM");
      LcdState1=4;
   }
   if(Speed2==1 & LcdState1!=5){
      lcd.clear();
      lcd.print(" Xaxis     Yaxis");
      lcd.setCursor(0,1);
      lcd.print("47/RPM    47/RPM");
      LcdState1=5;
   }
}